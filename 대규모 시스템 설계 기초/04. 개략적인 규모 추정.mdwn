# 대제목

키워드 : `Back-of-the-envelope estimation`, `latency`

### 목차

- **개략적인 규모란?**
  - 배경
  - 개략적 규모 추정을 위한 기본기
- **2의 제곱수**
  - 배경
  - 데이터 볼륨의 단위
- **응답 지연값**
  - Latency 란
  - 연산에 따른 시간 순서

# 개략적인 규모란?

- 배경
  - 개략적 규모 : 보편적으로 통용되는 성능 수치상에서 사고 실험을 통해서 시스템의 추정치를 계산하는 행위
  - 이를 통해서 어떤 설계가 요구사항에 부합할 것인지를 확인할 수 있음
- 개략적 규모 추정을 위한 기본기
  - 2의 제곱수
  - 응답 지연값 (Latency)
  - 고가용성에 관련된 수치들

# 2의 제곱수

- 배경
  - 분산 시스템에서 다루는 데이터는 엄청나게 커질 수 있음
  - 이를 보통 컴퓨터에서 많이 사용되는 2의 제곱수를 통해서 표현함
- 데이터 볼륨의 단위
  - 2의 `n제곱` - `근사치`, `이름`, `축약`
    - `10 - 1,000 - 1KB`
    - `20 - 1,000,000 - 1MB`
    - `30 - 1,000,000,000 - 1GB`
    - `40 - 1,000,000,000,000 - 1TB`
    - `50 - 1,000,000,000,000,000 - 1PB`

# Latency, 응답지연 값

- Latency 란
  - 컴퓨터 연산들의 처리 속도
- 연산에 따른 시간 순서
  1. L1 캐시 참조
  2. 분기 예측 오류 (branch mispredict)
  3. L2 캐시 참조
  4. 뮤텍스 락/언락
  5. 주 메모리 참조
  6. Zippy 로 1KB 압축
  7. 1 gbps 네트워크로 2kb 전송
  8. 메모리에서 1MB 씩 순차적 read
  9. 같은 데이터센터 내에서 왕복 지연시간
  10. 디스크 탐색
- 결론
  - 메모리는 빠르지만 디스크는 느리다
  - 디스크 탐색은 가능한 피하라
  - 단순한 압축 알고리즘은 빠르다
  - 데이터를 인터넷으로 전송하기 전에 가능하면 압축하라
  - 데이터 센터는 여러 region 에 분산되어 있고, 센터들 간에 데이터를 주고받는 데 시간이 걸린다

# 가용성에 관계된 수치들

- 고가용성
  - 오랜 시간 동안 지속적으로 중단 없이 운영될 수 있는 능력
  - 보통 퍼센트로 표현
