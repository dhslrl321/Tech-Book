# 컴퓨터 시스템의 하드웨어 구성

- 컴퓨터 시스템 : 하드웨어 + 소프트웨어
- 하드웨어 : 프로세서, 메모리, 주변장치, 시스템 버스
  - 시스템 버스로 하드웨어의 3요소들이 서로 연결되고 데이터를 주고받는다.

# 프로세서와 레지스터

- 프로세서 : CPU로 소프트웨어적인 관점에서 부를 때, 프로세서라고 부름
  - 프로세서 구성요소 : (연산장치, 레지스터), (제어장치)
    - 제어장치가 연산장치와 레지스터를 관리 및 제어하고, 연산장치와 레지스터는 서로 데이터를 공유함
  - 레지스터 :
    - 레지스터 구분 방법
      - 용도에 따라 : 전용 레지스터, 범용 레지스터
      - 사용자가 데이터를 변경할 수 있느냐에 따라 : user-visible 레지스터, user-invisible 레지스터
        - User-Visible Register : DR, AR
        - User-Invisible Register : PC, IR, ACC, MAR, MBR
          - MAR vs MBR
            - MAR : 메인 메모리에 접근하여 저장된 메모리를 적재하는 레지스터
            - MBR : 프로세서가 사용할 실제 데이터를 적재하는 레지스터

# 메모리

- 메모리 가격이 종류별로 다르고 차이가 많이 나서 다양한 메모리를 **계층 구조로 사용**함
  - 레지스터 : 프로세서 **내부**
  - 캐시 : 프로세소 **내부** + **외부**, 속도가 빠른 레지스터와 속도가 상대적으로 느린 메인 메모리 사이의 속도 차이를 극복하는 **고속의 버퍼**
    - 메인 메모리에서 데이터를 **블록 단위로 가져옴** -> 프로세서에 **워드 단위로 전달함**
    - 캐시 동작 방법
      1. 프로세서가 메인 메모리에 접근하기 전에 캐시에 해당 주소의 자료가 있는지 확인
      2. 24 비트 중 태그에 해당하는 처음 22비트를 캐시의 모든 라인과 비교하여 일치하는 라인을 찾음
      3. 일치한다면 주소의 나머지 2비트를 이용하여 데이터 라인의 4개 바이트 중 해당하는 바이트를 가져옴 (**Cache Hit**)
      4. 일치하지 않는다면 메인 메모리에 참조 (**Cache Miss**)
    - 캐시의 성능 : 블록의 크기
      - 공간 지역성 : 한 번 참조한 주소와 인접한 주소를 다시 참조하는 특성
      - 시간 지역성 : 한 번 참조한 주소를 곧 다시 참조하는 특성
  - 메인 메모리 : 프로세서 **외부**
    - 프로세서에서 즉각적으로 수행할 프로그램과 데이터를 저장하거나 결과를 저장
    - 구성 요소 : 다수의 셀로 구성되며 각 셀은 비트로 구성, 셀이 k 비트면 셀에 2^k 의 값을 저장할 수 있음
    - 메인 메모리에서 물리적 주소 즉 절대 주소가 주어지면 개발자는 절대 주소 대신 변수나 수식으로 이용함
    - 물리적 주소 vs 논리적 주소
      - 물리적 주소 : 실제 메모리에 할당되어있는 주소, 물리적으로 존재함
      - 논리적 주소 : 컴파일 시점에 컴파일러가 할당하는 주소, CPU가 할당함
      - 이 둘을 연결하는 것을 **매핑** 또는 **메모리 맵**이라고 함
    - 메모리 속도 표현법 : 메모리 접근 시간 + 메모리 사이클 시간
    - 가상 메모리 방법을 이용하여 메모리의 유효 크기를 늘림
