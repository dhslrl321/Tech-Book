# CQS

- Spring Data 에서 save() 는 CQS 를 위반하는 것일까?
- 아니다
- CQS 를 하는 이유는 무엇일까
  - 참조 투명성이다
  - 명령과 쿼리를 분리함으로 쿼리는 항상 동일한 값을 반환할 것이라는 참조에 대한 투명성을 안게 되는 것이다
- 핵심은 부수효과이다

```java
Wallet save(Wallet wallet);
```

- 위의 코드는 `save()` 는 command 처럼 보인다.
- 하지만 값을 반환하고 있어 쿼리의 형태를 띈다.
- 문제인가?
  - 아니다 해당 메서드를 쿼리의 형태로 사용하는 클라이언트는 없다.
  - 참조 투명성의 전제 조건이 되지 않는다. 그럼 CQS 의 본질을 훼손시키지 않는다.
