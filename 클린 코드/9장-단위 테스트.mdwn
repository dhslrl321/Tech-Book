[개발자 책읽기] 클린 코드-애자일 소프트웨어 장인 정신 (9장 단위 테스트)

> 해당 글은 Robert C.Martin **클린 코드** 라는 책을 읽고 학습한 내용을 정리 및 회고하는 글 입니다. 자세한 사항은 [YES 24 클린 코드 - 애자일 소프트웨어 장인 정신](http://www.yes24.com/Product/Goods/11681152) 에서 확인해주세요.

#### **클린 코드** - 애자일 소프트웨어 장인 정신 (Uncle Bob)

- 위키북스
- 지은이: Robert C.Martin (Uncle Bob)
- 옮긴이: 박재호, 이해영

[##_Image|kage@b9ygf9/btrr9gXuJLT/c0H8kDAQIeYzVNO0yolpn1/img.png|CDM|1.3|{"originWidth":1440,"originHeight":1440,"style":"alignCenter","width":468,"height":468}_##]

---

# 이번 장에서 이야기하고자 하는 것

## 테스트 코드는 무엇을 의미하는가

- 개발자가 작성한 코드의 첫 번째 클라이언트
- 개발자 본인이 수정한 코드가 제대로 동작하는 것을 확인하는 가장 쉬운 방법
- 엉클 밥이 참여한 많은 팀에서는 깨끗한 테스트 코드를 통해서 성공했던 케이스가 많았다.

## 깨끗한 테스트 코드 유지하기

- 지저분한 테스트 코드는 안하느니만 못하다
- 테스트 코드가 지저분할 수록 테스트 코드를 변경하기 어려워진다.
  - 결국 테스트 코드는 쓸모없는 쓰레기가 된다.
  - 테스트 코드를 짜느라 들였던 시간은 무의미한 시간이 된다.
- 테스트 코드는 실제 코드 못지 않게 중요하고 깨끗하게 짜야 한다
- 테스트 코드는 유연성, 유지보수성, 재사용성을 제공한다.
  - 테스트 코드가 존재한다면 어떠한 변경사항이 있더라도 안심할 수 있게 된다.
  - 테스트 코드가 없다면 모든 것은 잠정적인 버그이다.

## 깨끗한 테스트 코드

- 깨끗한 테스트 코드를 위해서는 세 가지가 필요하다
  - 가독성, 가독성, 가독성
- 테스트 코드에서는 최소의 표현으로 많은 것을 나타내야 한다
- 이를 위해서는 명료성, 단순성, 풍부한 표현력이 필요하다
- 테스트 당 assert 하나
  - assert 가 하나라는 말은 결론이 하나다.
    - 즉, 한 가지의 결론에 대해서만 이해하면 된다.
- 테스트당 개념 하나
  - 테스트 함수마다 한 개념만 테스트하라

## F.I.R.S.T

- Fast
  - 테스트가 느리면 테스트 코드를 추가할 엄두가 나지 않는다.
- Independent
  - 테스트는 서로 의존하면 안된다
  - 한 테스트를 실행하기 위해서 다른 테스트가 실행될 환경을 준비하면 안된다
- Repeatable
  - 테스트는 어떤 환경에서도 반복이 가능해야 한다.
- Self-Validation
  - 테스트는 성공 아니면 실패다.
- Timely
  - 테스트 코드는 실제 코드를 구현하기 전에 작성한다.

# 나의 해석과 회고

나는 지금까지 거의 대부분의 프로젝트에서 테스트 코드를 짜왔다.

나에게 테스트 코드는 어떠한 변경에 있을 때, 믿고 수정할 수 있는 하나의 컴포트존인 셈이었다.

하지만 테스트를 잘 짜고 있는가? 아니다.

내가 경험한 테스트 코드에서는 큰 단점이 존재했다.

**바로 하나를 수정하면 연쇄적으로 테스트가 깨지는 현상**이다.

이 말은 테스트와 어쩌면 무관할 수 있다.

하나의 테스트를 수행하는데 다른 테스트들이 깨진다는 것은 그만큼 테스트 대상인 SUT 의 책임이 많다는 소리와 연결이 된다.

여기서 하나를 얻을 수 있다.

테스트를 잘 작성하기만 한다면, 테스트가 잘 동작하게 한다면, 테스트가 개발을 주도하게 한다면 의도적으로라도 책임과 역할에 대해서 고민해야 한다.

어쩌면 테스트의 목적은 각각의 의존을 낮추고 응집력있는 설계를 할 수 있는 첫 걸음이 아닐까 생각이 든다.
